{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WeatherWidget=()=>{const[weather,setWeather]=useState(null);const[loading,setLoading]=useState(true);// Simulate weather data fetching\nuseEffect(()=>{const fetchWeather=()=>{setLoading(true);// Simulate API delay\nsetTimeout(()=>{const conditions=['Sunny','Cloudy','Rainy','Partly Cloudy','Clear'];const cities=['New York','London','Tokyo','Paris','Sydney'];const mockWeather={temperature:Math.floor(Math.random()*30)+10,// 10-40¬∞C\ncondition:conditions[Math.floor(Math.random()*conditions.length)],humidity:Math.floor(Math.random()*40)+40,// 40-80%\nwindSpeed:Math.floor(Math.random()*20)+5,// 5-25 km/h\ncity:cities[Math.floor(Math.random()*cities.length)]};setWeather(mockWeather);setLoading(false);},1000);};fetchWeather();// Refresh weather every 30 seconds\nconst interval=setInterval(fetchWeather,30000);return()=>clearInterval(interval);},[]);const getWeatherIcon=condition=>{switch(condition.toLowerCase()){case'sunny':return'‚òÄÔ∏è';case'cloudy':return'‚òÅÔ∏è';case'rainy':return'üåßÔ∏è';case'partly cloudy':return'‚õÖ';case'clear':return'üåô';default:return'üå§Ô∏è';}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"weather-widget\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading weather data...\"})});}if(!weather){return/*#__PURE__*/_jsx(\"div\",{className:\"weather-widget\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:\"Failed to load weather data\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"weather-widget\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"weather-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:weather.city}),/*#__PURE__*/_jsx(\"div\",{className:\"weather-icon\",children:getWeatherIcon(weather.condition)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"temperature\",children:[weather.temperature,\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"condition\",children:weather.condition})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Humidity:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[weather.humidity,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Wind Speed:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[weather.windSpeed,\" km/h\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"weather-note\",children:/*#__PURE__*/_jsx(\"p\",{children:\"This is a simulated weather widget. In a real app, you would connect to a weather API.\"})})]});};export default WeatherWidget;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","WeatherWidget","weather","setWeather","loading","setLoading","fetchWeather","setTimeout","conditions","cities","mockWeather","temperature","Math","floor","random","condition","length","humidity","windSpeed","city","interval","setInterval","clearInterval","getWeatherIcon","toLowerCase","className","children"],"sources":["C:/Users/manikanta.prasad/source/repos/ReactApp/src/components/WeatherWidget.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\ninterface WeatherData {\r\n  temperature: number;\r\n  condition: string;\r\n  humidity: number;\r\n  windSpeed: number;\r\n  city: string;\r\n}\r\n\r\nconst WeatherWidget: React.FC = () => {\r\n  const [weather, setWeather] = useState<WeatherData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Simulate weather data fetching\r\n  useEffect(() => {\r\n    const fetchWeather = () => {\r\n      setLoading(true);\r\n      \r\n      // Simulate API delay\r\n      setTimeout(() => {\r\n        const conditions = ['Sunny', 'Cloudy', 'Rainy', 'Partly Cloudy', 'Clear'];\r\n        const cities = ['New York', 'London', 'Tokyo', 'Paris', 'Sydney'];\r\n        \r\n        const mockWeather: WeatherData = {\r\n          temperature: Math.floor(Math.random() * 30) + 10, // 10-40¬∞C\r\n          condition: conditions[Math.floor(Math.random() * conditions.length)],\r\n          humidity: Math.floor(Math.random() * 40) + 40, // 40-80%\r\n          windSpeed: Math.floor(Math.random() * 20) + 5, // 5-25 km/h\r\n          city: cities[Math.floor(Math.random() * cities.length)]\r\n        };\r\n        \r\n        setWeather(mockWeather);\r\n        setLoading(false);\r\n      }, 1000);\r\n    };\r\n\r\n    fetchWeather();\r\n    \r\n    // Refresh weather every 30 seconds\r\n    const interval = setInterval(fetchWeather, 30000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getWeatherIcon = (condition: string) => {\r\n    switch (condition.toLowerCase()) {\r\n      case 'sunny':\r\n        return '‚òÄÔ∏è';\r\n      case 'cloudy':\r\n        return '‚òÅÔ∏è';\r\n      case 'rainy':\r\n        return 'üåßÔ∏è';\r\n      case 'partly cloudy':\r\n        return '‚õÖ';\r\n      case 'clear':\r\n        return 'üåô';\r\n      default:\r\n        return 'üå§Ô∏è';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"weather-widget\">\r\n        <div className=\"loading\">Loading weather data...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!weather) {\r\n    return (\r\n      <div className=\"weather-widget\">\r\n        <div className=\"error\">Failed to load weather data</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"weather-widget\">\r\n      <div className=\"weather-header\">\r\n        <h3>{weather.city}</h3>\r\n        <div className=\"weather-icon\">\r\n          {getWeatherIcon(weather.condition)}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"weather-main\">\r\n        <div className=\"temperature\">\r\n          {weather.temperature}¬∞C\r\n        </div>\r\n        <div className=\"condition\">\r\n          {weather.condition}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"weather-details\">\r\n        <div className=\"detail\">\r\n          <span>Humidity:</span>\r\n          <span>{weather.humidity}%</span>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <span>Wind Speed:</span>\r\n          <span>{weather.windSpeed} km/h</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"weather-note\">\r\n        <p>This is a simulated weather widget. In a real app, you would connect to a weather API.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherWidget; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}